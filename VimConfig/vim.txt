"============一些简单配置============
set nocompatible              "关闭与vi的兼容
set number                    "显示行号
set softtabstop=4             "使得按退格键时可以一次删掉 4 个空格
set autochdir                 "自动切换当前目录为当前文件所在的目录
set ignorecase smartcase      "搜索时忽略大小写
set nowrapscan                "禁止在搜索到文件两端时重新搜索
set incsearch                 "输入搜索内容时就显示搜索结果
set hlsearch                  "搜索时高亮显示被找到的文本
set noerrorbells              "关闭错误信息响铃
set novisualbell              "关闭使用可视响铃代替呼叫
set t_vb=                     "置空错误铃声的终端代码
set tabstop=4
set history=1000
set background=dark           "设置背景色为灰色
syntax on                     "打开语法高亮显示  
set autoindent                "自动对齐，使用上一行的对齐方式  
set smartindent               "智能对齐方式    
set shiftwidth=4  
set showmatch                 "匹配括号  
set guioptions-=T             "隐藏工具栏  
set ruler                     "在编辑过程中，在右下角显示光标位置的状态行  
set nohls
"编码设置
set enc=utf-8
set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936
"在处理未保存或只读文件的时候，弹出确认
set confirm
"自动补全
:inoremap ( ()<ESC>i
:inoremap ) <c-r>=ClosePair(')')<CR>
:inoremap { {<CR>}<ESC>O
:inoremap } <c-r>=ClosePair('}')<CR>
:inoremap [ []<ESC>i
:inoremap ] <c-r>=ClosePair(']')<CR>
:inoremap " ""<ESC>i
:inoremap ' ''<ESC>i
function! ClosePair(char)
    if getline('.')[col('.') - 1] == a:char
		return "\<Right>"
	else
		return a:char
	endif
endfunction
filetype plugin indent on 
"打开文件类型检测, 加了这句才可以用智能补全
set completeopt=longest,menu

"自动补全命令时候使用菜单式匹配列表
set wildmenu
autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType java set omnifunc=javacomplete#Complet

"===========================================华丽分割线===============================================
"
"=================新建文件自动插入头文件和文件注释===================
autocmd BufNewFile *.cpp,*.[ch],*.sh,*.java exec ":call SetTitle()" 
""定义函数SetTitle，自动插入文件头 
func SetTitle() 
    "如果文件类型为.sh文件 
	if &filetype == 'sh'
		call setline(1, "\#########################################################################")
		call append(line("."), "\# File Name: ".expand("%")) 
		call append(line(".")+1, "\# Author: eaikao")
		call append(line(".")+2, "\# mail: 279712302@qq.com")
		call append(line(".")+3, "\# Created Time: ".strftime("%c")) 
		call append(line(".")+4, "\#########################################################################") 
		call append(line(".")+5, "\#!/bin/bash") 
		call append(line(".")+6, "")
    else 
		call setline(1, "/*************************************************************************") 
		call append(line("."), "    > File Name: ".expand("%")) 
		call append(line(".")+1, "    > Author: eaikao") 
		call append(line(".")+2, "    > Mail: 279712302@qq.com ") 
		call append(line(".")+3, "    > Created Time: ".strftime("%c")) 
	    call append(line(".")+4, " ************************************************************************/") 
	    call append(line(".")+5, "")
	endif
	    if &filetype == 'cpp'
		call append(line(".")+6, "#include<iostream>")
		call append(line(".")+7, "using namespace std;")
		call append(line(".")+8, "")
		endif
		if &filetype == 'c'
		call append(line(".")+6, "#include<stdio.h>")
		call append(line(".")+7, "")
		endif
	"新建文件后，自动定位到文件末尾
	    autocmd BufNewFile * normal G
endfunc 

"===============================华丽分割线==============================================================
"
"
"
"============================键盘设置=====================================================

nmap <leader>w :w!<cr>
nmap <leader>f :find<cr>

" 映射全选+复制 ctrl+a
map <C-A> ggVGY
map! <C-A> <Esc>ggVGY
map <F12> gg=G
" 选中状态下 Ctrl+c 复制
vmap <C-c> "+y
"去空行  
nnoremap <F2> :g/^\s*$/d<CR> 
"比较文件  
nnoremap <C-F2> :vert diffsplit 
"新建标签  
map <M-F2> :tabnew<CR>  
"列出当前目录文件  
map <F3> :tabnew .<CR> 
"打开树状文件目录  
map <C-F3> \be 
